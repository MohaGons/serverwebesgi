version: "3.8"
services:
  server:
    image: node:20-alpine
    volumes:
      - ./backend:/usr/src/app
      - ./backend.sh:/init.sh
    working_dir: /usr/src/app
    command: sh -c "chmod +x /init.sh && /init.sh"
    env_file:
      - ./.env
    depends_on:
      - db
  db:
    image: postgres
    environment:
      POSTGRES_DB: myproductsdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
  frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
    env_file:
      - ./.env
    command: sh -c "npm install && npm run start"
  adminer:
    image: adminer
  nginx:
    image: nginx:latest
    ports:
      - "${SERVER_PORT}:80"
      - "${SERVER_PORT_HTTPS}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    env_file:
      - ./.env
    depends_on:
      - frontend
      - server
      - adminer
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./jail.local:/data/etc/fail2ban/jail.local:ro
      - ./fail2ban.nginx.conf:/data/etc/fail2ban/filter.d/nginx.conf:ro
      - ./fail2ban.adminer.conf:/data/etc/fail2ban/filter.d/adminer.conf:ro
    network_mode: host
    restart: unless-stopped